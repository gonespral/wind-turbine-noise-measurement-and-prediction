import numpy as np


def TBL_TEEEEE(M, Re, alpha_star, delta_s, delta_p, f, U):
    gamma =  27.094*M + 3.31

    gamma0 = 23.43*M + 4.651

    beta = 72.65*M + 10.74

    beta0 = -34.19*M - 13.82

    if Re < 2.47*10**5:
        K1 = -4.31 * np.log10(Re) + 156.3
    elif 2.47*10**5 <= Re <= 8 * 10**5:
        K1 = -9*np.log10(Re) + 181.6
    else:
        K1 = 128.5
    
    if alpha_star < (gamma0 - gamma):
        K2 = K1 - 1000
    elif (gamma0 - gamma) <= alpha_star <= (gamma0 + gamma):
        K2 = K1 + np.sqrt(beta**2 - ((beta/gamma)**2 * (alpha_star - gamma0)**2)) + beta0
    else:
        K2 = K1 - 12

    sts = f * delta_s / U
    stp = f * delta_p / U
    st1 = 0.02 * M**-0.6
    st1avg = (st1 + st2) / 2
    stpeak = max(st1, st1avg, st2)


    if alpha_star < 1.33:
        st2 = st1
    elif 1.33 <= alpha_star <= 12.5:
        st2 = st1 * 10**(0.0054(alpha_star-1.33)**2)
    else:
        st2 = st1 * 4.72
    

    a = np.abs(np.log10(sts/stpeak))

    if Re < 9.52*10**4:
        a0 = 0.57
    elif 9.52*10**4 <= Re <= 8.57*10**5:
        a0 = (-9.57*10**-13)*(Re - (8.57*10**5))**2 + 1.13
    else:
        a0 = 1.13



    b = np.abs(np.log10(sts/st2))

    if Re < 9.52*10**4:
        b0 = 0.3
    elif 9.52*10**4 <= Re <= 8.57*10**5:
        b0 = (-4.48*10**-13)*(Re - (8.57*10**5))**2 + 0.56



    def CalcAmin(a):
        if a < 0.204:
            Amin = np.sqrt(67.552 - 886.788*a**2) - 8.219
        elif 0.204 <= a <= 0.244:
            Amin = -32.665*a + 3.981
        else:
            Amin = -4.669*a**3 + 3.491*a**2 - 16.699*a + 1.149
        return Amin

    Amina = CalcAmin(a)

    



    

    b = np.abs(np.log10(sts/st2))

    

    


return SPL
